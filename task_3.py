"""
üìå Task 3: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—â–∏—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π –¥–≤—É—Ö —á–∏—Å–µ–ª
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é common_divisors(a: int, b: int) -> set, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ 
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏—Ö –æ–±—â–∏—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π.

üîπ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:
print(common_divisors(12, 18))

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
{1, 2, 3, 6}

üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –¥–µ–ª–∏—Ç–µ–ª–∏ a –∏ b (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ range(1, n+1)).
–ù–∞–π–¥–∏—Ç–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤ –¥–µ–ª–∏—Ç–µ–ª–µ–π.
"""

def common_divisors(a, b):
    # TODO: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –∑–¥–µ—Å—å
    pass

# –¢–µ—Å—Ç—ã
assert common_divisors(12, 18) == {1, 2, 3, 6}
assert common_divisors(7, 13) == {1}
assert common_divisors(100, 50) == {1, 2, 5, 10, 25, 50}
assert common_divisors(8, 16) == {1, 2, 4, 8}
